{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}",
    "annotations": {
      "description": "Parse API server using the parse-server module",
      "tags": "nodejs,parse",
      "iconClass": "icon-nodejs"
    }
  },
  "labels": {
    "template": "parse-server"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Redirect"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${PARSE_IMAGE_NAMESPACE}",
                "name": "${PARSE_SERVER_IMAGE}:${PARSE_TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": "${PARSE_SERVER_IMAGE}",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "MONGODB_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "value": "${DATABASE_ADMIN_PASSWORD}"
                  },
                  {
                    "name": "PORT",
                    "value": "8080"
                  },
                  {
                    "name": "DATABASE_URI",
                    "value": "mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_NAME}/${DATABASE_NAME}"
                  },
                  {
                    "name": "APP_ID",
                    "value": "${APP_ID}"
                  },
                  {
                    "name": "MASTER_KEY",
                    "value": "${MASTER_KEY}"
                  },
                  {
                    "name": "PARSE_MOUNT",
                    "value": "${PARSE_MOUNT}"
                  },
                  {
                    "name": "SERVER_URL",
                    "value": "${SERVER_URL}"
                  },
                  {
                    "name": "MAX_UPLOAD_SIZE",
                    "value": "${MAX_UPLOAD_SIZE}"
                  },
                  {
                    "name": "MAIL_SERVER_HOST",
                    "value": "${MAIL_SERVER_HOST}"
                  },
                  {
                    "name": "FROM_ADDRESS",
                    "value": "${FROM_ADDRESS}"
                  },
                  {
                    "name": "PUBLIC_SERVER_URL",
                    "value": "${PUBLIC_SERVER_URL}"
                  },
                  {
                    "name": "MAIL_SERVER_USER",
                    "value": "${MAIL_SERVER_USER}"
                  },
                  {
                    "name": "MAIL_SERVER_PASSWORD",
                    "value": "${MAIL_SERVER_PASSWORD}"
                  },
                  {
                    "name": "MAIL_SERVER_TLS_REJECT_UNAUTHORIZED",
                    "value": "${MAIL_SERVER_TLS_REJECT_UNAUTHORIZED}"
                  },
                  {
                    "name": "NODE_TLS_REJECT_UNAUTHORIZED",
                    "value": "${NODE_TLS_REJECT_UNAUTHORIZED}"
                  },
                  {
                    "name": "USERS_JSON",
                    "value": "${USERS_JSON}"
                  },
                  {
                    "name": "PRODUCTION_ENV",
                    "value": "${PRODUCTION_ENV}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 5,
                  "initialDelaySeconds": 65,
                  "httpGet": {
                    "path": "/parse-dashboard/login",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                    "timeoutSeconds": 5,
                    "initialDelaySeconds": 30,
                    "tcpSocket": {
                        "port": 8080
                    }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}",
                    "cpu": "${CPU_LIMIT}"
                  },
                  "request": {
                    "memory": "${MEMORY_REQUEST}",
                    "cpu": "${CPU_REQUEST}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${NAME}-data",
                    "mountPath": "/opt/app-root/src/files"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}"
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "parse-mongodb",
            "port": 27017,
            "targetPort": 27017
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${MONGODB_VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY_SERVICE}"
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "parse-mongodb"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${DATABASE_IMAGE_NAMESPACE}",
                "name": "${DATABASE_IMAGE_NAME}:${DATABASE_IMAGE_TAG}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "parse-mongodb",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 27017
                  }
                ],
                "env": [
                  {
                    "name": "MONGODB_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "value": "${DATABASE_ADMIN_PASSWORD}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "exec": {
                    "command": [ "/bin/sh", "-i", "-c", "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 27017
                  }
                },
                "resources": {
                  "limits": {
                      "memory": "${MEMORY_MONGODB_LIMIT}",
                      "cpu": "${CPU_MONGODB_LIMIT}"
                  },
                  "request": {
                    "memory": "${MEMORY_MONGODB_REQUEST}",
                    "cpu": "${CPU_MONGODB_REQUEST}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/mongodb/data"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}"
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "parse-server"
    },
    {
      "name": "PARSE_SERVER_IMAGE",
      "displayName": "image-name of the parse server.",
      "description": "image-name of the parse server.",
      "value": "parse-server"
    },
    {
      "name": "PARSE_TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "PARSE_IMAGE_NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "eao-iuc-tools"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the Node.js container can use.",
      "required": true,
      "value": "256Mi"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "CPU Limit",
      "description": "Maximum amount of CPU the Node.js container can use.",
      "required": true,
      "value": "500m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Memory Request",
      "description": "Request amount of memory the Node.js container can use.",
      "required": true,
      "value": "128Mi"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "CPU Request",
      "description": "Request amount of CPU the Node.js container can use.",
      "required": true,
      "value": "300m"
    },
    {
      "name": "MEMORY_MONGODB_LIMIT",
      "displayName": "Memory Limit (MongoDB)",
      "description": "Maximum amount of memory the MongoDB container can use.",
      "required": true,
      "value": "256Mi"
    },
    {
      "name": "MEMORY_MONGODB_REQUEST",
      "displayName": "Memory Request (MongoDB)",
      "description": "Request amount of CPU the MongoDB container can use.",
      "required": true,
      "value": "128Mi"
    },
    {
      "name": "CPU_MONGODB_LIMIT",
      "displayName": "CPU Limit (MongoDB)",
      "description": "Maximum amount of CPU the MongoDB container can use.",
      "required": true,
      "value": "200m"
    },
    {
      "name": "CPU_MONGODB_REQUEST",
      "displayName": "CPU Request (MongoDB)",
      "description": "Request amount of CPU the MongoDB container can use.",
      "required": true,
      "value": "100m"
    },
    {
      "name": "MONGODB_VOLUME_CAPACITY",
      "displayName": "Volume Capacity for Database",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "5Gi",
      "required": true
    },
    {
      "name": "VOLUME_CAPACITY_SERVICE",
      "displayName": "Volume Capacity for the parse service",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/bcgov/eao-parse-server"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
      "value": "master"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
      "value": "parse-server-eao-iuc-dev.pathfinder.gov.bc.ca"
    },
    {
      "name": "DATABASE_IMAGE_NAME",
      "displayName": "Database Image Name",
      "required": true,
      "value": "mongodb"
    },
    {
      "name": "DATABASE_IMAGE_TAG",
      "displayName": "Database Image Tag",
      "required": true,
      "value": "3.2"
    },
    {
      "name": "DATABASE_IMAGE_NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "parse-mongodb"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "MongoDB Username",
      "description": "Username for MongoDB user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MongoDB Password",
      "description": "Password for the MongoDB user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "parse"
    },
    {
      "name": "DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Administrator Password",
      "description": "Password for the database admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "APP_ID",
      "displayName": "App's Unique Identifier",
      "description": "A unique identifier for your app",
      "value": "changeMe"
    },
    {
      "name": "MASTER_KEY",
      "displayName": "Parse Master Key",
      "description": "A key that overrides all permissions. Keep this secret",
      "value": "changeMe"
    },
    {
      "name": "PARSE_MOUNT",
      "displayName": "Parse API route",
      "description": "Configure Parse API route",
      "value": "/parse"
    },
    {
      "name": "MAX_UPLOAD_SIZE",
      "displayName": "Maximum upload post size",
      "description": "Maximum upload post size",
      "value": "100mb"
    },
    {
      "name": "MAIL_SERVER_HOST",
      "displayName": "Mail server hostname",
      "description": "What smtp server hostname to use for mail",
      "value": "apps.smtp.gov.bc.ca"
    },
    {
      "name": "FROM_ADDRESS",
      "displayName": "Mail from address",
      "description": "Mail from address",
      "value": "noreply@projects.eao.gov.bc.ca"
    },
    {
      "name": "SERVER_URL",
      "displayName": "Server url for parse",
      "description": "Server url for parse - this should be application hostname + /parse",
      "value": "https://parse-server-eao-iuc-dev.pathfinder.gov.bc.ca/parse"
    },
    {
      "name": "PUBLIC_SERVER_URL",
      "displayName": "Publically accessible server url for parse",
      "description": "Publically accessible server url for parse - this should be application hostname + /parse",
      "value": "https://parse-server-eao-iuc-dev.pathfinder.gov.bc.ca/parse"
    },
    {
      "name": "MAIL_SERVER_USER",
      "displayName": "Mail SMTP username",
      "description": "Mail SMTP username",
      "value": "user"
    },
    {
      "name": "MAIL_SERVER_PASSWORD",
      "displayName": "Mail SMTP password",
      "description": "Mail SMTP password",
      "value": "password"
    },
    {
      "name": "MAIL_SERVER_TLS_REJECT_UNAUTHORIZED",
      "displayName": "Mail server tls reject unauthorized flag.",
      "description": "Mail server tls reject unauthorized flag.",
      "value": "false"
    },
    {
      "name": "NODE_TLS_REJECT_UNAUTHORIZED",
      "displayName": "NodeJS tls reject unauthorized flag.",
      "description": "NodeJS tls reject unauthorized flag.",
      "value": "'0'"
    },
    {
      "name": "USERS_JSON",
      "displayName": "Default users to load in parse.",
      "description": "Default users to load in parse.",
      "value": "[{\"user\": \"test\", \"pass\": \"test\"}]"
    },
    {
      "name": "PRODUCTION_ENV",
      "displayName": "Branding flag on parse web service.",
      "description": "Branding flag on parse web service.",
      "value": "false"
    }
  ]
}
